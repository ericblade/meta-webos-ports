From aa8f312d6dd7118c780218575ffc3850cdd11e52 Mon Sep 17 00:00:00 2001
From: Herrie <Github.com@herrie.org>
Date: Fri, 9 Feb 2024 06:06:05 +0100
Subject: [PATCH] com.webos.service.pdm: Gracefully handle BIND actions

So we don't get confusing errors in logs:

Feb 08 00:34:19 pinetab2 physical-device-manager[815]: [] [pmlog] PDM HIDDeviceHandler: {} ProcessHIDDevice line: 105 out of range : map::at

Thread 2 "physical-device" hit Breakpoint 1, HIDDeviceHandler::ProcessHIDDevice (this=0x27dc46a0, devClass=<optimized out>) at /usr/src/debug/com.webos.service.pdm/1.0.1-84-r10/git/src/handlers/hid/HIDDeviceHandler.cpp:105
105	/usr/src/debug/com.webos.service.pdm/1.0.1-84-r10/git/src/handlers/hid/HIDDeviceHandler.cpp: No such file or directory.
(gdb) f 2
#2  0x00000000004aa0ac in DeviceManager::HandlePdmDevice (this=0x567aa8 <DeviceManager::getInstance()::_instance>, devClassPtr=0xffffa4027130)
    at /usr/src/debug/com.webos.service.pdm/1.0.1-84-r10/git/src/framework/DeviceManager.cpp:85
85	/usr/src/debug/com.webos.service.pdm/1.0.1-84-r10/git/src/framework/DeviceManager.cpp: No such file or directory.
(gdb) print *devClassPtr
$1 = {_vptr.DeviceClass = 0x511188 <vtable for HIDSubsystem+16>, mDevPropMap = std::unordered_map with 34 elements = {["ID_BLUETOOTH"] = "", ["ID_BLACKLIST"] = "",
    ["ACTION"] = "bind", ["BUSNUM"] = "019", ["DEVNAME"] = "bus/usb/019/008", ["ID_SERIAL"] = "1018_1006", ["ID_PATH_TAG"] = "platform-fd840000_usb-usb-0_1",
    ["DEVNUM"] = "008", ["ID_USB_INTERFACES"] = ":030101:030000:", ["PRODUCT"] = "1018/1006/106", ["MINOR"] = "2311", ["DEVPATH"] = "/devices/platform/fd840000.usb/usb19/19-1",
    ["ID_VENDOR"] = "1018", ["ID_VENDOR_ENC"] = "1018", ["ID_MODEL_ENC"] = "1006", ["MAJOR"] = "189", ["TYPE"] = "0/0/0", ["SEQNUM"] = "5009", ["ID_VENDOR_ID"] = "1018",
    ["SPEED"] = "12", ["ID_REVISION"] = "0106", ["SUBSYSTEM"] = "usb", ["TAGS"] = ":seat:", ["USEC_INITIALIZED"] = "7893376433",
    ["ID_FOR_SEAT"] = "usb-platform-fd840000_usb-usb-0_1", ["ID_PATH"] = "platform-fd840000.usb-usb-0:1", ["USB_PORT"] = "1", ["ID_MODEL_ID"] = "1006", ["ID_MODEL"] = "1006",
    ["ID_BUS"] = "usb", ["DRIVER"] = "usb", ["DEVTYPE"] = "usb_device", ["isPowerOnConnect"] = "false", ["CURRENT_TAGS"] = ":seat:"}}

Signed-off-by: Herman van Hazendonk <github.com@herrie.org>
---
Upstream-Status: Pending

 inc/private/Device.h                  | 5 +++--
 src/handlers/hid/HIDDeviceHandler.cpp | 4 ++++
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/inc/private/Device.h b/inc/private/Device.h
index 4e3a136..e6895d2 100644
--- a/inc/private/Device.h
+++ b/inc/private/Device.h
@@ -27,7 +27,7 @@
 
 enum DeviceSpeed { FULL = 12, HIGH = 480, SUPER = 5000};
 
-enum DeviceActions {USB_DEV_ADD =0, USB_DEV_REMOVE, USB_DEV_CHANGE};
+enum DeviceActions {USB_DEV_ADD =0, USB_DEV_REMOVE, USB_DEV_CHANGE, USB_DEV_BIND};
 enum UsbDeviceTypes {TYPE_DEV_USB =0, TYPE_DEV_DISK, TYPE_DEV_PARTITION};
 
 // Map to associate storage device type with the UsbDeviceTypes enum values
@@ -41,7 +41,8 @@ static std::map<std::string, UsbDeviceTypes> sMapUsbDeviceType= {
 static std::map<std::string, DeviceActions> sMapDeviceActions= {
     {"add",     USB_DEV_ADD},
     {"remove",  USB_DEV_REMOVE},
-    {"change",  USB_DEV_CHANGE}
+    {"change",  USB_DEV_CHANGE},
+    {"bind",  USB_DEV_BIND}
 };
 
 class Device : public IDevice {
diff --git a/src/handlers/hid/HIDDeviceHandler.cpp b/src/handlers/hid/HIDDeviceHandler.cpp
index 5bc5448..f4f1363 100644
--- a/src/handlers/hid/HIDDeviceHandler.cpp
+++ b/src/handlers/hid/HIDDeviceHandler.cpp
@@ -95,6 +95,10 @@ void HIDDeviceHandler::ProcessHIDDevice(DeviceClass* devClass){
                        m_deviceRemoved = true;
                     }
                     break;
+                case DeviceActions::USB_DEV_BIND:
+                    PDM_LOG_INFO("HIDDeviceHandler:",0,"%s line: %d Action BIND", __FUNCTION__,__LINE__);
+                    //Do nothing
+                    break;
                 default:
                     PDM_LOG_DEBUG("HIDDeviceHandler: %s line: %d ACTION NOT found", __FUNCTION__, __LINE__);
                 //Do nothing
