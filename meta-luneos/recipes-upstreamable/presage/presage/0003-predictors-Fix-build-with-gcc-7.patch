From 43ea985d38985f528cda80dd7c2ad021b24bbeee Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Tue, 1 Aug 2023 10:38:49 +0200
Subject: [PATCH] predictors: Fix build with gcc-7

Don't use assert on istream, but just on is_open(), otherwise it fails with:

presage-0.9.1/src/lib/predictors/ARPAPredictor.cpp:114:5: error: no match for 'operator==' (operand types are 'std::ifstream {aka std::basic_ifstream<char>}' and 'int')

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
Upstream-Status: Pending
---
 src/lib/predictors/ARPAPredictor.cpp       | 4 ++--
 src/lib/predictors/dictionaryPredictor.cpp | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/lib/predictors/ARPAPredictor.cpp b/src/lib/predictors/ARPAPredictor.cpp
index 6a3cd5b..0b0083b 100644
--- a/src/lib/predictors/ARPAPredictor.cpp
+++ b/src/lib/predictors/ARPAPredictor.cpp
@@ -83,7 +83,7 @@ void ARPAPredictor::loadVocabulary()
     if(!vocabFile)
 	logger << ERROR << "Error opening vocabulary file: " << vocabFilename << endl;
 
-    assert(vocabFile);
+    assert(vocabFile.is_open());
     std::string row;
     int code = 0;
     while(std::getline(vocabFile,row))
@@ -111,7 +111,7 @@ void ARPAPredictor::createARPATable()
     if(!arpaFile)
 	logger << ERROR << "Error opening ARPA model file: " << arpaFilename << endl;
 
-    assert(arpaFile);
+    assert(arpaFile.is_open());
     std::string row;
 
     int currOrder = 0;
diff --git a/src/lib/predictors/dictionaryPredictor.cpp b/src/lib/predictors/dictionaryPredictor.cpp
index 370e4e4..d8d89a6 100644
--- a/src/lib/predictors/dictionaryPredictor.cpp
+++ b/src/lib/predictors/dictionaryPredictor.cpp
@@ -75,7 +75,7 @@ Prediction DictionaryPredictor::predict(const size_t max_partial_predictions_siz
     dictionary_file.open(dictionary_path.c_str());
     if(!dictionary_file)
         logger << ERROR << "Error opening dictionary: " << dictionary_path << endl;
-    assert(dictionary_file); // REVISIT: handle with exceptions
+    assert(dictionary_file.is_open()); // REVISIT: handle with exceptions
 
     // scan file entries until we get enough suggestions
     unsigned int count = 0;
